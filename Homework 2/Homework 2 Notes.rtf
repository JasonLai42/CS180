{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\ftech\fcharset77 Symbol;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Problem 15:\
\
	Option 1:\
	Use k-coloring to show that the pairings of frequencies and locations in a bipartite graph; \
	don\'92t know if possible set can even be found.\
		- k-coloring is, in an undirected graph G, is there a possible assignment of colors to 		nodes such that each node is a different color from all of its neighbors and at most k 		colors are use.\
\
	Option 2:\
	Use vertex covering/independent set (frequencies are edges, locations are nodes, or vice \
	versa?) and find a set of vertices where the locations of the no interference are.\
\
	CHOOSE Option 2:\
		Locations are nodes, and frequencies unblocked by certain locations are edges. If only \
		one location permits a certain frequency, the edge should be drawn as a cycle on that \
		node, since vertex cover only specifies the graph G be an arbitrary, undirected graph. \
		The vertex cover would choose all nodes needed to hit all possible edges, assumed to \
		be the smallest set in order to do so (educe redundancy, if an edge is reached by two 		nodes, then only pick one of those nodes; in their example, f4 is allowed at both l1 and 		l2, but since l2 covers more edges than 1 (2 > 1), choose l2 to be in the vertex cover 		set; complements independent set, which is assumed to be the largest possible set of 		independent nodes).\
\
Problem 22:\
\
	Calls to the algorithm A would just require that you call A(k, G) for all k = 1, 2, \'85, n until the \
	algorithm says no (this still runs in polynomial time), which would yield the largest independent \
	set of G. What about a graph that\'92s not connected?\
\
	Add a node and connect every node to that node; this would run in O(n).\
\
	Final algorithm will be (number of connected subgraphs) * 2 * N * (complexity of A):\
		- 2N because 1 N is the traversal, the other N is k\
\
Problem 36:\
\
	- s(j) = size in grams of an ingredient Ij\
	- c(j) = cost in dollars per unit of an ingredient Ij\
	- t(j) = time in days that an ingredient Ij is safe to use\
	- ith daily special uses Subset Si 
\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8838  \{
\f2 I
\f1 1, 
\f2 I
\f1 2, \'c9, 
\f2 In
\f1 \} 
\f0 of raw ingredients\
	- Si is divided into two smaller subsets: ingredients that must be purchased on the day that \
	the daily is offered and ingredients that can be used any day while they\'92re still safe
\f2 \
	
\f0 - a(i, j) is the grams of ingredient Ij needed to make the ith daily\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
	Buy ingredients in amounts that can be used once for a mandatory fresh daily, and the rest can 	be used for dailies that aren\'92t mandatory fresh.\
\
	\'93Of course, scheduling the basil recipes close together may make it harder to schedule the \
	goat cheese recipes close together, and so forth \'97 this is where the complexity comes in.\'94\
		- Some recipes that use goat cheese may not use basil\
		- If you just make the basil dailies contiguous to maximize basil use, then the goat \
		cheese recipes may be farther spread apart, i.e. a goat cheese recipe that uses basil \
		may be in the middle of the chunk of basil recipes, while the rest of the goat cheese \
		recipes that don\'92t use goat cheese have to wait till all the basil recipes have had their \
		daily => this leads to starvation; a goat cheese purchased for a basil recipe may go bad \
		before it can be used again by the time the basil chunk is finished (THIS IS A 		SCHEDULING PROBLEM; CS 111 WOOOOOOOOOO)\
\
	Knapsack algorithm?\
		- Value would be the optimal amount that an ingredient can be purchased and used \
		completely after one trip to the market; the caveat is that this amount is not the \
		maximum amount it can be used, but the maximum amount it can be used without \
		interfering with the other ingredients for dailies.\
		- Cost would just be the cost in dollars per unit gram for the ingredients.\
		- We want to maximize value for the cost; less trips to the market, more dishes that can \
		be made from an amount x of an ingredient purchased. Cost can\'92t really be reduced, \
		just the opportunity cost in the possible wasted ingredients.\
\
	\'93So we define the 
\i Daily Special Scheduling Problem
\i0  as follows: Given data on ingredients and \
	recipes as above, and a budget x, is there a way to schedule the k daily specials so that the \
	total money spent on ingredients over the course of all k days is at most x?\'94}